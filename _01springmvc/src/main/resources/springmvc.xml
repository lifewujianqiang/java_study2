<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 方式二  解决静态资源无法访问的问题 加上一下标签即可
    <mvc:default-servlet-handler/>
-->

    <!-- 注解驱动，有静态资源师要写次标签 -->
    <mvc:annotation-driven/>
    <!--<mvc:annotation-driven conversion-service="conversionService"/>-->

    <!--&lt;!&ndash;注册类型转换器&ndash;&gt;-->
    <!--<bean id="dateConverter" class="converter.DateConverter"/>-->
    <!--&lt;!&ndash;注册类型转换服务&ndash;&gt;-->
    <!--<bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">-->
        <!--<property name="converters" ref="dateConverter"/>-->
    <!--</bean>-->

    <!--  组件扫描器  那些类用到注解-->
    <context:component-scan base-package="controller"/>

    <!--  注册拦截器 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>  <!-- 拦截所有controller -->
            <bean class="intercepter.MyIntercepter"/>
        </mvc:interceptor>
    </mvc:interceptors>


    <!-- 注册自定义异常处理器 -->
    <!--<bean class="myexcption.myExceptionResolver"/>-->


    <!--或者  异常处理 -->
    <!--<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
        <!--<property name="exceptionMappings">-->
            <!--<props>-->
                <!--&lt;!&ndash; 可以定义多个自定义异常&ndash;&gt;-->
                <!--<prop key="myexcption.MyException">error/myerror</prop>-->
            <!--</props>-->
        <!--</property>-->
        <!--&lt;!&ndash; 默认的异常跳转页面 &ndash;&gt;-->
        <!--<property name="defaultErrorView" value="error/error"/>-->
        <!---->
        <!--&lt;!&ndash; 异常信息 ,可以在js页面中获取value的值&ndash;&gt;-->
        <!--<property name="exceptionAttribute" value="ex"/>-->


    <!--</bean>-->


    <!-- 静态资源      方式三  开发中使用，性能好-->
    <mvc:resources mapping="/images/**" location="/images/"/>
    <mvc:resources mapping="/css/**" location="/css/"/>

    <!-- 访问外部资源配置项   解析器  放在内部解析器的上面-->
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>

    <!-- 定义外部资源的view对象 -->
    <bean id="external" class="org.springframework.web.servlet.view.RedirectView">
        <property name="url" value="https://www.baidu.com/"/>
    </bean>


    <!-- 视图解析器 -->
    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>





    <!--  注册controller -->
    <bean id="/hello.do" class="controller.HelloSpringMVC"/>
</beans>